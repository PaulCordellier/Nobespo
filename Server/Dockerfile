# The comments in french are generated by VS2022, i'm not deleting the just in case
# Also sagger doesn't work in a container, idk why

# Consultez https://aka.ms/customizecontainer pour savoir comment personnaliser votre conteneur de débogage et comment Visual Studio utilise ce Dockerfile pour générer vos images afin d’accélérer le débogage.

# Cet index est utilisé lors de l’exécution à partir de VS en mode rapide (par défaut pour la configuration de débogage)
FROM mcr.microsoft.com/dotnet/aspnet:9.0 AS base
USER app
WORKDIR /app
# Default HTTP port :
EXPOSE 8080
# Default HTTPS port :
EXPOSE 8081


# Cette phase est utilisée pour générer le projet de service
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
ARG BUILD_CONFIGURATION=Debug
WORKDIR /src
COPY ["Server.csproj", "."]
RUN dotnet restore "./Server.csproj"
COPY . .
RUN dotnet build "./Server.csproj" -c $BUILD_CONFIGURATION -o /app/build

# Cette étape permet de publier le projet de service à copier dans la phase finale
FROM build AS publish
ARG BUILD_CONFIGURATION=Debug
RUN dotnet publish "./Server.csproj" -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false

# Cette phase est utilisée en production ou lors de l’exécution à partir de VS en mode normal (par défaut quand la configuration de débogage n’est pas utilisée)
FROM base AS final
WORKDIR /app
RUN --mount=type=secret,id=tmdbapikey
RUN --mount=type=secret,id=tmdbapireadtoken
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "Server.dll"]

# Commandes utilisées pour lancer le projet :
# docker build . -t nobespo-aspdotnet-app
# docker run -it -p 5259:8080 --rm --name dockerize-nobespo-aspdotnet-app nobespo-aspdotnet-app 