services:
  client:
    container_name: nobespo-client-container
    build: ./client
    ports:
      - 8220:80     # HTTP
      - 8221:443    # HTTPS
    volumes:
      - ./client/ssl-certificate.crt:/etc/ssl/certs/certificate.crt
      - ./client/ssl-private-key.key:/etc/ssl/private/private-key.key
    depends_on:
      - server
  server:
    container_name: nobespo-server-container
    build: ./Server
    ports:
      - 8000:80     # HTTP
      - 8001:443    # HTTPS
    depends_on:
      - database
    secrets:
      - TmdbApiKey
      - TmdbApiReadToken
      - JwtSecretKey
      - DbPassword
    # generate ssl certificate:
    # code from : https://learn.microsoft.com/en-us/aspnet/core/security/docker-https?view=aspnetcore-8.0#macos-or-linux
    volumes:
      - ./Server/ssl-certificate.pfx:/https/aspnetapp.pfx
    environment:
      - ASPNETCORE_Kestrel__Certificates__Default__Password=NobespoSslPassword
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ASPNETCORE_URLS=https://+;http://+
    stdin_open: true    # Equivalent to -i (keep STDIN open)
    tty: true           # Equivalent to -t (allocate a pseudo-TTY)
  database:
    container_name: nobespo-db-container
    image: postgres:17
    restart: always
    # set shared memory limit when using docker-compose:
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/DbPassword
      POSTGRES_DB: nobespo
    volumes:
      - ./database/generated_creation_script.sql:/docker-entrypoint-initdb.d/1_creation_script.sql
    secrets:
      - DbPassword

secrets:
  TmdbApiKey:
    file: ./secrets/TmdbApiKey.txt
  TmdbApiReadToken:
    file: ./secrets/TmdbApiReadToken.txt
  JwtSecretKey:
    file: ./secrets/JwtSecretKey.txt
  DbPassword:
    file: ./secrets/DbPassword.txt

# To start the server:
# use: docker-compose build
# or: docker-compose build --no-cache
# then: docker-compose up

# To get the logs from nginx:
# docker cp nobespo-client-container:/var/log/nginx/all_logs.log ./client/nginx_logs.log